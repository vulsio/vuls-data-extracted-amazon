{
	"id": "ALAS2ECS-2023-003",
	"advisories": [
		{
			"content": {
				"id": "ALAS2ECS-2023-003",
				"title": "Amazon Linux 2 - Ecs 2.0 - ALAS2ECS-2023-003: important priority package update for ecs-service-connect-agent",
				"description": "Package updates are available for Amazon Linux 2 - Ecs that fix the following vulnerabilities:\nCVE-2023-27496:\n\tEnvoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, the OAuth filter assumes that a `state` query param is present on any response that looks like an OAuth redirect response. Sending it a request with the URI path equivalent to the redirect path, without the `state` parameter, will lead to abnormal termination of Envoy process. Versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9 contain a patch. The issue can also be mitigated by locking down OAuth traffic, disabling the filter, or by filtering traffic before it reaches the OAuth filter (e.g. via a lua script).\n\nCVE-2023-27493:\n\tEnvoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, Envoy does not sanitize or escape request properties when generating request headers. This can lead to characters that are illegal in header values to be sent to the upstream service. In the worst case, it can cause upstream service to interpret the original request as two pipelined requests, possibly bypassing the intent of Envoy's security policy. Versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9 contain a patch. As a workaround, disable adding request headers based on the downstream request properties, such as downstream certificate properties.\n\nCVE-2023-27492:\n\tEnvoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, the Lua filter is vulnerable to denial of service. Attackers can send large request bodies for routes that have Lua filter enabled and trigger crashes. As of versions versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, Envoy no longer invokes the Lua coroutine if the filter has been reset. As a workaround for those whose Lua filter is buffering all requests/ responses, mitigate by using the buffer filter to avoid triggering the local reply in the Lua filter.\n\nCVE-2023-27491:\n\tEnvoy is an open source edge and service proxy designed for cloud-native applications. Compliant HTTP/1 service should reject malformed request lines. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, There is a possibility that non compliant HTTP/1 service may allow malformed requests, potentially leading to a bypass of security policies. This issue is fixed in versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9.\n\nCVE-2023-27488:\n\tEnvoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, escalation of privileges is possible when `failure_mode_allow: true` is configured for `ext_authz` filter. For affected components that are used for logging and/or visibility, requests may not be logged by the receiving service. When Envoy was configured to use ext_authz, ext_proc, tap, ratelimit filters, and grpc access log service and an http header with non-UTF-8 data was received, Envoy would generate an invalid protobuf message and send it to the configured service. The receiving service would typically generate an error when decoding the protobuf message. For ext_authz that was configured with ``failure_mode_allow: true``, the request would have been allowed in this case. For the other services, this could have resulted in other unforeseen errors such as a lack of visibility into requests. As of versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, Envoy by default sanitizes the values sent in gRPC service calls to be valid UTF-8, replacing data that is not valid UTF-8 with a `!` character. This behavioral change can be temporarily reverted by setting runtime guard `envoy.reloadable_features.service_sanitize_non_utf8_strings` to false. As a workaround, one may set `failure_mode_allow: false` for `ext_authz`.\n\nCVE-2023-27487:\n\tEnvoy is an open source edge and service proxy designed for cloud-native applications. Prior to versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9, the client may bypass JSON Web Token (JWT) checks and forge fake original paths. The header `x-envoy-original-path` should be an internal header, but Envoy does not remove this header from the request at the beginning of request processing when it is sent from an untrusted client. The faked header would then be used for trace logs and grpc logs, as well as used in the URL used for `jwt_authn` checks if the `jwt_authn` filter is used, and any other upstream use of the x-envoy-original-path header. Attackers may forge a trusted `x-envoy-original-path` header. Versions 1.26.0, 1.25.3, 1.24.4, 1.23.6, and 1.22.9 have patches for this issue.\n",
				"severity": [
					{
						"type": "vendor",
						"source": "linux-security@amazon.com",
						"vendor": "important"
					}
				],
				"references": [
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27487"
					},
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27488"
					},
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27491"
					},
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27492"
					},
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27493"
					},
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27496"
					},
					{
						"source": "linux-security@amazon.com",
						"url": "https://alas.aws.amazon.com/AL2/ALASECS-2023-003.html"
					}
				]
			},
			"segments": [
				{
					"ecosystem": "amazon:2"
				}
			]
		}
	],
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2023-27487",
				"references": [
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27487"
					}
				]
			},
			"segments": [
				{
					"ecosystem": "amazon:2"
				}
			]
		},
		{
			"content": {
				"id": "CVE-2023-27488",
				"references": [
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27488"
					}
				]
			},
			"segments": [
				{
					"ecosystem": "amazon:2"
				}
			]
		},
		{
			"content": {
				"id": "CVE-2023-27491",
				"references": [
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27491"
					}
				]
			},
			"segments": [
				{
					"ecosystem": "amazon:2"
				}
			]
		},
		{
			"content": {
				"id": "CVE-2023-27492",
				"references": [
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27492"
					}
				]
			},
			"segments": [
				{
					"ecosystem": "amazon:2"
				}
			]
		},
		{
			"content": {
				"id": "CVE-2023-27493",
				"references": [
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27493"
					}
				]
			},
			"segments": [
				{
					"ecosystem": "amazon:2"
				}
			]
		},
		{
			"content": {
				"id": "CVE-2023-27496",
				"references": [
					{
						"source": "linux-security@amazon.com",
						"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-27496"
					}
				]
			},
			"segments": [
				{
					"ecosystem": "amazon:2"
				}
			]
		}
	],
	"detections": [
		{
			"ecosystem": "amazon:2",
			"conditions": [
				{
					"criteria": {
						"operator": "OR",
						"criterions": [
							{
								"vulnerable": true,
								"fix_status": {
									"class": "fixed"
								},
								"package": {
									"name": "ecs-service-connect-agent",
									"architectures": [
										"aarch64"
									],
									"repositories": [
										"amzn2extra-ecs"
									]
								},
								"affected": {
									"type": "rpm",
									"range": [
										{
											"lt": "0:v1.25.4.0-1.amzn2"
										}
									],
									"fixed": [
										"0:v1.25.4.0-1.amzn2"
									]
								}
							},
							{
								"vulnerable": true,
								"fix_status": {
									"class": "fixed"
								},
								"package": {
									"name": "ecs-service-connect-agent-debuginfo",
									"architectures": [
										"aarch64"
									],
									"repositories": [
										"amzn2extra-ecs"
									]
								},
								"affected": {
									"type": "rpm",
									"range": [
										{
											"lt": "0:v1.25.4.0-1.amzn2"
										}
									],
									"fixed": [
										"0:v1.25.4.0-1.amzn2"
									]
								}
							}
						]
					}
				}
			]
		}
	],
	"data_source": {
		"id": "amazon",
		"raws": [
			"vuls-data-raw-amazon/2/extras/ecs/2023/ALAS2ECS-2023-003.json"
		]
	}
}
