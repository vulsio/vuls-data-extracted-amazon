{
	"id": "ALAS-2023-1848",
	"advisories": [
		{
			"id": "ALAS-2023-1848",
			"title": "Amazon Linux AMI 2014.03 - ALAS-2023-1848: important priority package update for golang",
			"description": "Package updates are available for Amazon Linux AMI that fix the following vulnerabilities:\nCVE-2023-39319:\n\tThe html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.\n\nCVE-2023-29409:\n\tExtremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.\n\nCVE-2023-29406:\n\tThe HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.\n\nCVE-2023-29405:\n\tThe go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.\n\nCVE-2023-29404:\n\tThe go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.\n\nCVE-2023-29403:\n\tOn Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.\n\nCVE-2023-29400:\n\thtml/template: improper handling of empty HTML attributes.\n\nTemplates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input could result in output that would have unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.\n\nCVE-2023-24540:\n\thtml/template: improper handling of JavaScript whitespace.\n\nNot all valid JavaScript whitespace characters were considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.\n\nCVE-2023-24538:\n\tTemplates did not properly consider backticks (`) as Javascript string delimiters, and as such did\nnot escape them as expected. Backticks are used, since ES6, for JS template literals. If a template\ncontained a Go template action within a Javascript template literal, the contents of the action could\nbe used to terminate the literal, injecting arbitrary Javascript code into the Go template.\n\nCVE-2023-24537:\n\tCalling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.\n\nCVE-2023-24532:\n\tThe ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.\n\nCVE-2022-41725:\n\tGolang: net/http, mime/multipart: denial of service from excessive resource consumption (https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E)\n\nCVE-2022-41724:\n\tLarge handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).\n\nCVE-2022-41722:\n\tThe Go project has described this issue as follows:\n\n\"On Windows, the filepath.Clean function could transform an invalid path such as a/../c:/b into the valid path c:\\b. This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. The filepath.Clean function will now transform this path into the relative (but still invalid) path .\\c:\\b.\"\n\nCVE-2022-41717:\n\tAn attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.\n",
			"severity": [
				{
					"type": "vendor",
					"source": "linux-security@amazon.com",
					"vendor": "important"
				}
			],
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "https://alas.aws.amazon.com/ALAS-2023-1848.html"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41717"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41722"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41724"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41725"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24532"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24537"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24538"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24540"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29400"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29403"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29404"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29405"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29406"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29409"
				},
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-39319"
				}
			]
		}
	],
	"vulnerabilities": [
		{
			"id": "CVE-2022-41717",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41717"
				}
			]
		},
		{
			"id": "CVE-2022-41722",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41722"
				}
			]
		},
		{
			"id": "CVE-2022-41724",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41724"
				}
			]
		},
		{
			"id": "CVE-2022-41725",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-41725"
				}
			]
		},
		{
			"id": "CVE-2023-24532",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24532"
				}
			]
		},
		{
			"id": "CVE-2023-24537",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24537"
				}
			]
		},
		{
			"id": "CVE-2023-24538",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24538"
				}
			]
		},
		{
			"id": "CVE-2023-24540",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24540"
				}
			]
		},
		{
			"id": "CVE-2023-29400",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29400"
				}
			]
		},
		{
			"id": "CVE-2023-29403",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29403"
				}
			]
		},
		{
			"id": "CVE-2023-29404",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29404"
				}
			]
		},
		{
			"id": "CVE-2023-29405",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29405"
				}
			]
		},
		{
			"id": "CVE-2023-29406",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29406"
				}
			]
		},
		{
			"id": "CVE-2023-29409",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29409"
				}
			]
		},
		{
			"id": "CVE-2023-39319",
			"references": [
				{
					"source": "linux-security@amazon.com",
					"url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-39319"
				}
			]
		}
	],
	"detection": [
		{
			"ecosystem": "amazon:1",
			"vulnerable": true,
			"package": {
				"name": "golang-tests",
				"repositories": [
					"amzn-main",
					"amzn-updates"
				],
				"architectures": [
					"noarch"
				]
			},
			"affected": {
				"type": "rpm",
				"range": [
					{
						"lt": "0:1.20.8-1.47.amzn1"
					}
				],
				"fixed": [
					"0:1.20.8-1.47.amzn1"
				]
			}
		},
		{
			"ecosystem": "amazon:1",
			"vulnerable": true,
			"package": {
				"name": "golang-bin",
				"repositories": [
					"amzn-main",
					"amzn-updates"
				],
				"architectures": [
					"i686"
				]
			},
			"affected": {
				"type": "rpm",
				"range": [
					{
						"lt": "0:1.20.8-1.47.amzn1"
					}
				],
				"fixed": [
					"0:1.20.8-1.47.amzn1"
				]
			}
		},
		{
			"ecosystem": "amazon:1",
			"vulnerable": true,
			"package": {
				"name": "golang-docs",
				"repositories": [
					"amzn-main",
					"amzn-updates"
				],
				"architectures": [
					"noarch"
				]
			},
			"affected": {
				"type": "rpm",
				"range": [
					{
						"lt": "0:1.20.8-1.47.amzn1"
					}
				],
				"fixed": [
					"0:1.20.8-1.47.amzn1"
				]
			}
		},
		{
			"ecosystem": "amazon:1",
			"vulnerable": true,
			"package": {
				"name": "golang",
				"repositories": [
					"amzn-main",
					"amzn-updates"
				],
				"architectures": [
					"i686"
				]
			},
			"affected": {
				"type": "rpm",
				"range": [
					{
						"lt": "0:1.20.8-1.47.amzn1"
					}
				],
				"fixed": [
					"0:1.20.8-1.47.amzn1"
				]
			}
		},
		{
			"ecosystem": "amazon:1",
			"vulnerable": true,
			"package": {
				"name": "golang-src",
				"repositories": [
					"amzn-main",
					"amzn-updates"
				],
				"architectures": [
					"noarch"
				]
			},
			"affected": {
				"type": "rpm",
				"range": [
					{
						"lt": "0:1.20.8-1.47.amzn1"
					}
				],
				"fixed": [
					"0:1.20.8-1.47.amzn1"
				]
			}
		},
		{
			"ecosystem": "amazon:1",
			"vulnerable": true,
			"package": {
				"name": "golang-misc",
				"repositories": [
					"amzn-main",
					"amzn-updates"
				],
				"architectures": [
					"noarch"
				]
			},
			"affected": {
				"type": "rpm",
				"range": [
					{
						"lt": "0:1.20.8-1.47.amzn1"
					}
				],
				"fixed": [
					"0:1.20.8-1.47.amzn1"
				]
			}
		},
		{
			"ecosystem": "amazon:1",
			"vulnerable": true,
			"package": {
				"name": "golang-shared",
				"repositories": [
					"amzn-main",
					"amzn-updates"
				],
				"architectures": [
					"i686"
				]
			},
			"affected": {
				"type": "rpm",
				"range": [
					{
						"lt": "0:1.20.8-1.47.amzn1"
					}
				],
				"fixed": [
					"0:1.20.8-1.47.amzn1"
				]
			}
		}
	],
	"data_source": "amazon"
}
